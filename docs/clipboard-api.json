{
  "openapi": "3.0.1",
  "info": {
    "title": "Clipboard API",
    "description": "The clipboard API provides an API to let clients send messages It is designed to support both administration of users/topics and subscriptions",
    "contact": {
      "name": "Bart van Pelt",
      "email": "brtvnplt@gmail.com"
    },
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    },
    "version": "0.1"
  },
  "servers": [
    {
      "url": "http://localhost:8080",
      "description": "Generated server url"
    }
  ],
  "paths": {
    "/users/{id}/subscriptions": {
      "put": {
        "tags": [
          "user-controller"
        ],
        "summary": "Add subscriptions",
        "operationId": "addSubscriptions",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Add subscriptions",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "400": {
            "description": "Invalid id supplied",
            "content": {

            }
          },
          "404": {
            "description": "User not found",
            "content": {

            }
          }
        }
      }
    },
    "/users/{id}/removed": {
      "put": {
        "tags": [
          "user-controller"
        ],
        "summary": "Change status of user to removed",
        "operationId": "removeUserStatusById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Changed status to removed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "400": {
            "description": "Invalid id supplied",
            "content": {

            }
          },
          "404": {
            "description": "User not found",
            "content": {

            }
          }
        }
      }
    },
    "/users/{id}/disabled": {
      "put": {
        "tags": [
          "user-controller"
        ],
        "summary": "Change status of user to disabled",
        "operationId": "disableUserStatusById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Changed status to disabled",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "400": {
            "description": "Invalid id supplied",
            "content": {

            }
          },
          "404": {
            "description": "User not found",
            "content": {

            }
          }
        }
      }
    },
    "/users/{id}/confirm": {
      "put": {
        "tags": [
          "user-controller"
        ],
        "summary": "Change status of user to confirmed",
        "operationId": "updateUserStatusById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Changed status to confirmed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "400": {
            "description": "Invalid id supplied",
            "content": {

            }
          },
          "404": {
            "description": "User not found",
            "content": {

            }
          }
        }
      }
    },
    "/users": {
      "get": {
        "tags": [
          "user-controller"
        ],
        "summary": "Get all known users",
        "operationId": "getUsers",
        "responses": {
          "200": {
            "description": "Found users",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserList"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "No users found",
            "content": {

            }
          }
        }
      },
      "post": {
        "tags": [
          "user-controller"
        ],
        "summary": "Register new user",
        "operationId": "registerUser",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/User"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "New user is registered",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RegistrationTicket"
                }
              }
            }
          },
          "400": {
            "description": "Bad parameters",
            "content": {

            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/postmessage": {
      "post": {
        "tags": [
          "post-message-controller"
        ],
        "summary": "Post a message",
        "operationId": "postMessage",
        "parameters": [
          {
            "name": "x-api-key",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PostMessage"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Message is posted",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PostMessage"
                }
              }
            }
          },
          "400": {
            "description": "Bad parameters",
            "content": {

            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/cliptopics": {
      "get": {
        "tags": [
          "clip-topic-controller"
        ],
        "summary": "Get all known cliptopics",
        "operationId": "getClipTopics",
        "responses": {
          "200": {
            "description": "Found cliptopics",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClipTopicList"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "No cliptopics found",
            "content": {

            }
          }
        }
      },
      "post": {
        "tags": [
          "clip-topic-controller"
        ],
        "summary": "Register new cliptopic",
        "operationId": "registerClipTopic",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ClipTopic"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "New user is registered",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClipTopic"
                }
              }
            }
          },
          "400": {
            "description": "Bad parameters",
            "content": {

            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/users/{id}": {
      "get": {
        "tags": [
          "user-controller"
        ],
        "summary": "Get a user by its id",
        "operationId": "getUserById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Found the user",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "400": {
            "description": "Invalid id supplied",
            "content": {

            }
          },
          "404": {
            "description": "User not found",
            "content": {

            }
          }
        }
      },
      "delete": {
        "tags": [
          "user-controller"
        ],
        "summary": "Delete a user by its id",
        "operationId": "deleteUserById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Deleted the user",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "400": {
            "description": "Invalid id supplied",
            "content": {

            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions": {
      "get": {
        "tags": [
          "subscription-controller"
        ],
        "summary": "Get all known subscriptions",
        "operationId": "getSubscriptions",
        "responses": {
          "200": {
            "description": "Found subscriptions",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Subscription"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "No subscriptions found",
            "content": {

            }
          }
        }
      }
    },
    "/cliptopics/{id}": {
      "get": {
        "tags": [
          "clip-topic-controller"
        ],
        "summary": "Get a cliptopic by its id",
        "operationId": "getClipTopicById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Found the cliptopic",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClipTopic"
                }
              }
            }
          },
          "400": {
            "description": "Invalid id supplied",
            "content": {

            }
          },
          "404": {
            "description": "ClipTopic not found",
            "content": {

            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Error": {
        "type": "object",
        "properties": {
          "msg": {
            "type": "string"
          },
          "status": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "RegistrationTicket": {
        "type": "object",
        "properties": {
          "userTicket": {
            "maxLength": 48,
            "minLength": 0,
            "type": "string"
          },
          "status": {
            "maxLength": 24,
            "minLength": 0,
            "type": "string"
          }
        }
      },
      "User": {
        "required": [
          "email",
          "endpoint",
          "name"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "name": {
            "maxLength": 24,
            "minLength": 0,
            "type": "string"
          },
          "email": {
            "maxLength": 128,
            "minLength": 0,
            "type": "string"
          },
          "endpoint": {
            "maxLength": 128,
            "minLength": 0,
            "type": "string"
          },
          "status": {
            "maxLength": 24,
            "minLength": 0,
            "type": "string"
          },
          "registrationTicket": {
            "$ref": "#/components/schemas/RegistrationTicket"
          }
        }
      },
      "PostMessage": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string"
          },
          "clipTopicName": {
            "type": "string"
          }
        }
      },
      "ClipTopic": {
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "name": {
            "maxLength": 24,
            "minLength": 0,
            "type": "string"
          },
          "description": {
            "maxLength": 128,
            "minLength": 0,
            "type": "string"
          }
        }
      },
      "UserList": {
        "type": "object",
        "properties": {
          "users": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/User"
            }
          }
        }
      },
      "Subscription": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "user": {
            "$ref": "#/components/schemas/User"
          },
          "clipTopic": {
            "$ref": "#/components/schemas/ClipTopic"
          }
        }
      },
      "ClipTopicList": {
        "type": "object",
        "properties": {
          "clipTopics": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ClipTopic"
            }
          }
        }
      }
    }
  }
}
